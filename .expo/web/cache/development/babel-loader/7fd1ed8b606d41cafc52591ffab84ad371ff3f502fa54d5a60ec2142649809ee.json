{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../components/Button\";\nimport { validateEmail } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SubscribeScreen = function SubscribeScreen() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var isEmailValid = validateEmail(email);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/little-lemon-logo-grey.png\")\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Subscribe to our newsletter for our latest delicious recipes!\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      placeholder: \"Type your email\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        Alert.alert(\"Thanks for subscribing, stay tuned!\");\n      },\n      disabled: !isEmailValid,\n      children: \"Subscribe\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: \"white\"\n  },\n  title: {\n    color: \"#333333\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  logo: {\n    height: 100,\n    width: 300,\n    resizeMode: \"contain\",\n    marginBottom: 32\n  },\n  input: {\n    height: 40,\n    marginVertical: 24,\n    borderRadius: 8,\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 16,\n    borderColor: \"EDEFEE\"\n  }\n});\nexport default SubscribeScreen;","map":{"version":3,"names":["React","Button","validateEmail","SubscribeScreen","useState","email","setEmail","isEmailValid","styles","container","logo","require","title","input","Alert","alert","StyleSheet","create","flex","padding","backgroundColor","color","textAlign","fontSize","height","width","resizeMode","marginBottom","marginVertical","borderRadius","borderWidth","borderColor"],"sources":["F:/React Native/Coursera/screens/SubscribeScreen.js"],"sourcesContent":["import * as React from \"react\";\nimport {Alert, Image, StyleSheet, Text, TextInput, View} from \"react-native\";\nimport Button from \"../components/Button\";\nimport {validateEmail} from \"../utils\";\n\nconst SubscribeScreen = () => {\n  const [email, setEmail] = React.useState('');\n\n  const isEmailValid = validateEmail(email);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.logo}\n        source={require(\"../assets/little-lemon-logo-grey.png\")}\n      />\n      <Text style={styles.title}>\n        Subscribe to our newsletter for our latest delicious recipes!\n      </Text>\n      <TextInput\n        style={styles.input}\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        placeholder={\"Type your email\"}\n      />\n      <Button\n        onPress={() => {\n          Alert.alert(\"Thanks for subscribing, stay tuned!\");\n        }}\n        disabled={!isEmailValid}\n      >\n        Subscribe\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: \"white\",\n  },\n  title: {\n    color: \"#333333\",\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  logo: {\n    height: 100,\n    width: 300,\n    resizeMode: \"contain\",\n    marginBottom: 32,\n  },\n  input: {\n    height: 40,\n    marginVertical: 24,\n    borderRadius: 8,\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 16,\n    borderColor: \"EDEFEE\",\n  },\n});\n\nexport default SubscribeScreen;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE/B,OAAOC,MAAM;AACb,SAAQC,aAAa;AAAkB;AAAA;AAEvC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;EAC5B,sBAA0BH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCC,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,YAAY,GAAGL,aAAa,CAACG,KAAK,CAAC;EAEzC,OACE,MAAC,IAAI;IAAC,KAAK,EAAEG,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,KAAK;MACJ,KAAK,EAAED,MAAM,CAACE,IAAK;MACnB,MAAM,EAAEC,OAAO;IAAyC,EACxD,EACF,KAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACI,KAAM;MAAA;IAAA,EAEnB,EACP,KAAC,SAAS;MACR,KAAK,EAAEJ,MAAM,CAACK,KAAM;MACpB,KAAK,EAAER,KAAM;MACb,YAAY,EAAEC,QAAS;MACvB,YAAY,EAAC,eAAe;MAC5B,eAAe,EAAC,cAAc;MAC9B,WAAW,EAAE;IAAkB,EAC/B,EACF,KAAC,MAAM;MACL,OAAO,EAAE,mBAAM;QACbQ,KAAK,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACpD,CAAE;MACF,QAAQ,EAAE,CAACR,YAAa;MAAA;IAAA,EAGjB;EAAA,EACJ;AAEX,CAAC;AAED,IAAMC,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDR,KAAK,EAAE;IACLS,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;EACZ,CAAC;EACDb,IAAI,EAAE;IACJc,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,UAAU,EAAE,SAAS;IACrBC,YAAY,EAAE;EAChB,CAAC;EACDd,KAAK,EAAE;IACLW,MAAM,EAAE,EAAE;IACVI,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdX,OAAO,EAAE,EAAE;IACXI,QAAQ,EAAE,EAAE;IACZQ,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAe5B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}